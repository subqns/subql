version: '3'

services:

  postgres:
    image: postgres:14-bullseye
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: nftmart
                                       
  hasura:                                 
    image: hasura/graphql-engine:v2.0.10
    ports:                                               
      - "8080:8080"                                            
    depends_on:                       
      - "postgres"                           
    restart: always                            
    environment:                     
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:nftmart@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  adminer:
    image: adminer
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: postgres
      ADMINER_DEFAULT_DB_NAME: postgres
    ports:
      - 8090:8080

  caddy:
    restart: always
    image: caddy
    entrypoint:
    - caddy
    command:
    - run
    - -config
    - /Caddyfile
    volumes:
    - ./Caddyfile:/Caddyfile
    ports:
    - 8040:80

  caddy-dev:
    profiles:
    - dev
    restart: always
    image: caddy
    entrypoint:
    - caddy
    command:
    - run
    - -config
    - /Caddyfile
    volumes:
    - ./Caddyfile.dev:/Caddyfile
    network_mode: host

  subql:
    image: nftmart/subql
    build: .
    environment:
      DB_SCHEMA: staging
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_USERNAME: postgres
      DB_PASS: nftmart
    command: yarn start -n staging_v3 --batch-size=100 --network-endpoint wss://staging.nftmart.io/rpc/ws
